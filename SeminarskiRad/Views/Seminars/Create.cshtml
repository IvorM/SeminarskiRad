@model SeminarskiRad.Models.Context.SeminarContext.Seminar

@{
    ViewBag.Title = "Novi seminar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">

    </div>
</div>
<div class="row" style="margin-top: 15px">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Novi
            </div>
            <div class="panel-body">
                <div class="panel-body">
                    <form id="seminarForm">
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SeminarDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.SeminarDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SeminarDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MaxStudents, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MaxStudents, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MaxStudents, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Teacher, htmlAttributes: new {@class = "control-label col-md-2"})
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Teacher, new {htmlAttributes = new {@class = "form-control"}})
                                    @Html.ValidationMessageFor(model => model.Teacher, "", new {@class = "text-danger"})
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SeminarDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.SeminarDescription, new { htmlAttributes = new { @class = "form-control" }, style = "width: 100%;height: 100px;min-width: 73px"  })
                                    @Html.ValidationMessageFor(model => model.SeminarDescription, "", new { @class = "text-danger"} )
                                </div>
                            </div>                         
                        </div>
                        <div class="row">
                            <div class="col-lg-12" style="text-align: right">
                                <button type="submit" value="Spremi" class="btn btn-primary">Spremi</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>      
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        $(document)
            .ready(function() {
                var token = $('input[name="__RequestVerificationToken"]', this).val();

                $('#SeminarDate')
                    .datepicker({
                        format: "dd.mm.yyyy.",
                        language: "hr",
                        autoclose: true
                    });

                $("#seminarForm")
                    .validate({
                        rules: {
                            Title: {
                                required: true
                            },
                            SeminarDescription: {
                                required: true
                            },
                            SeminarDate: {
                                required: true
                            },
                            Teacher: {
                                required: true
                            },
                            MaxStudents: {
                                required: true,
                                min:1
                            }
                        },
                        messages: {
                            Title: {
                                required: 'Naziv je obavezno polje!'
                            },
                            SeminarDescription: {
                                required: 'Opis je obavezno polje!'
                            },
                            SeminarDate: {
                                required: 'Datum je obavezno polje!'
                            },
                            Teacher: {
                                required: 'Profesor je obavezno polje!'
                            },
                            MaxStudents: {
                                required: 'Broj studenata je obavezno polje',
                                min: 'Minimalno 1'
                            }
                        },
                        highlight: function (element) {
                            $(element).closest('.form-group').addClass('has-error');
                        },
                        unhighlight: function (element) {
                            $(element).closest('.form-group').removeClass('has-error');
                            $(element).closest('.form-group').addClass('has-success');
                        }
                    });

                $('#seminarForm')
                    .submit(function(e) {
                        e.preventDefault();

                        if (!$("#seminarForm").valid()) {
                            return;
                        };

                        var seminar = {
                            'Title': $('#Title').val(),
                            'SeminarDescription': $('#SeminarDescription').val(),
                            'SeminarDate': $('#SeminarDate').val(),
                            'MaxStudents': $('#MaxStudents').val(),
                            'Closed': 'false',
                            'Teacher': $('#Teacher').val()
                        };

                        var token = $('input[name="__RequestVerificationToken"]', this).val();

                        $.ajax({
                            url: '@Url.Action("Create", "Seminars")',
                            type: 'POST',
                            data: {
                                __RequestVerificationToken: token,
                                'seminar': seminar
                            },
                            success: function(data) {
                                if (data.status == "success") {
                                    $.notify(data.message, "success");
                                    setTimeout(function () {
                                        window.location.href = "/Seminars/SeminarsList";
                                    }, 2000);
                                } else {
                                    $.notify(data.message, "error");
                                }
                            },
                            error: function(xhr, status, error) {
                                $.notify("Greška", "error");
                            }
                        });
                    }); 
            });
    </script>
}